input {
  elasticsearch {
    hosts => ["http://localhost:9200"]
    index => "watcher_metadata"
    query => '{"query": {"term": {"needs_update": true}}}'
    schedule => "* * * * * UTC"  # para testes: a cada minuto; depois ajuste para diÃ¡rio
    docinfo => true
  }
}

filter {
  mutate {
    add_field => {
      "watch_id" => "%{[@metadata][_id]}"
    }
  }

  json {
    source => "message"
    skip_on_invalid_json => true
  }

  ruby {
    code => '
      watch = {
        "trigger" => {
          "schedule" => { "interval" => event.get("interval") }
        },
        "input" => {
          "search" => {
            "request" => {
              "indices" => [event.get("index")],
              "body" => {
                "query" => {
                  "range" => {
                    "@timestamp" => {
                      "gte" => event.get("gte"),
                      "lt" => "now"
                    }
                  }
                }
              }
            }
          }
        },
        "actions" => {
          "log" => {
            "logging" => {
              "text" => "Watcher %{watch_id} triggered"
            }
          }
        }
      }
      event.set("watch_body", watch.to_json)
    '
  }
}

output {
  http {
    url => "http://localhost:9200/_watcher/watch/%{watch_id}"
    http_method => "put"
    format => "json"
    content_type => "application/json"
    headers => {
      "Authorization" => "Basic ZWxhc3RpYzpjaGF2ZXM="  # base64(user:pass) ou use user+token
    }
    body => "%{watch_body}"
  }

  # opcional: atualizar needs_update=false no watcher_metadata
  elasticsearch {
    hosts => ["http://localhost:9200"]
    index => "watcher_metadata"
    document_id => "%{watch_id}"
    action => "update"
    doc_as_upsert => true
    doc => {
      "needs_update" => false
      "last_deployed_at" => "%{@timestamp}"
    }
  }
}
